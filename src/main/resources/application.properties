#배포모드 설정
spring.profiles.active=local

#404 에러를 잡기위한 설정 
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#개발시 live-reload 를 위한 설정
spring.devtools.livereload.enabled=true

#Maria DB 설정
#spring.datasource.url=jdbc:mariadb://localhost:3306/jwtapi?useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/jwtapi?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.username=jwtapidemo
spring.datasource.password=jwtapidemo

#Hikari 설정
#Hikari 는 기본적으로 test-while-idle처럼 특정 기간마다 반복적으로 커넥션을 갱신하는 방식이 아니다.
#갱신을 하지 않고 커넥션 생성 시간이 HikariCP에 설정한 max-lifetime값에 도달하면 가차 없이 종료 된다.
#HikariCP는 기본적으로 DBA가 설정한 wait_timeout을 존중하며, 그 설정을 위반하지 않는다.
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000


#JPA 설정
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

#JPA 로깅
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true